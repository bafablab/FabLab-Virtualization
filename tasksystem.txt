-------
Task.gd
-------
Attributes:
-Task resources
-state(s) (idle (on the shelf) -> started -> plan on computer -> fetch material -> material in device -> device working -> object ready -> object on shelf -> finished)

Functions:
-init()
	Is it needed?

-start()
	Triggered by clicking object or post-it on shelf if state == idle
	Hides object or post-it from shelf, Shows task directions on HUD, changes state to started
	
-plan_on_computer()
	Triggered by clicking computer
	Show task-related image and a button or something to trigger next phase with
	
-planning_done()
	Triggered by clicking a button or something on computer, basically plan_on_computer-object from task resource
	Hides task-related image and button, changes state to fetch material

-material_fetched()
	Triggered by Device when it's collided with material in the right state (open)
	Changes state to material in device
	
-object_produced()
	Triggered by Device when work() is finished
	Changes state to object ready
	
-finish()
	Triggered when object collides with finisher_object
	Hides carried object, shows finished object on shelf

-------------
Task resource
-------------
-task_directions[string]
-extended_task_directions[string]
-starter_object  (clickable post-it?)
-finisher_object (collision box on the shelf?)
-plan_on_computer (texture resource or something that's toggled visible in the correct phase of the task)
-device
-material
-object

---------
Device.gd
---------
Attributes:
-name
-visiblename
-animations[] (device_closed, device_open, device_working ?)
-state(s) ? (closed -> open -> received material -> working -> work finished -> closed ?)

Functions:
-open()
	Triggered by input event (click?) and if allowed in current state (allowed: closed, received material, work finished)
	Plays open animation and changes state to open
	
-close()
	Triggered by input event (click?) and if allowed in current state (allowed: open, received material)
	Plays close animation and changes state to closed

-receive_material()
	Triggered by collision of correct material with device if state == open
	Plays receiving material animation (that ends with a similar visual state as closed?), moves carried material back to its starting place (so it's usable again), and changes state to received material

-work()
	Triggered by input event (device button pressed?) if allowed in current state (received material)
	Changes state to working, plays working animation (and progress bar or something on HUD?), changes state to work finished, turns finished object visible
	




-----------
Material.gd
-----------
Attributes
-name
-visiblename

Functions
-physics_process()
	Handle carrying here?
-possible getters for name?

---------
Object.gd
---------
Attributes
-internalname
-visiblename

Functions
-physics_process()
	Handle carrying here?
-possible getters for name?